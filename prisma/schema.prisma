// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum MessageType {
  TEXT
  VOICENOTE
}

enum MessageStatus {
  SENT
  DELIVERED
  SEEN
}

enum UserStatus {
  ONLINE
  OFFLINE
}

model User {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  profileImgUrl String?
  password      String
  status        UserStatus   @default(OFFLINE)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  lastActiveAt  DateTime?
  chats         ChatsUsers[]
  messages      Message[]

}

model Message {
  id                    Int           @id @default(autoincrement())
  message               String        @db.LongText
  voiceMessageAudioPath String?
  isVoiceMessage        Boolean       @default(false)
  sender                User          @relation(fields: [senderId], references: [id])
  senderId              Int
  chat                  Chat          @relation(fields: [chatId], references: [id])
  chatId                Int
  messageType           MessageType   @default(TEXT)
  messageStatus         MessageStatus @default(SENT)
  createdAt             DateTime      @default(now())
  parent                Message?      @relation(name: "message", fields: [parentId], references: [id])
  children              Message[]     @relation(name: "message")
  parentId              Int?
}

model ChatsUsers {
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  createdAt DateTime @default(now())

  @@id([userId, chatId])
}

model Chat {
  id        Int          @id @default(autoincrement())
  users     ChatsUsers[]
  messages  Message[]
  updatedAt DateTime     @default(now())
}
